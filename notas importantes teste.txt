https://wiki.sicredi.io/display/HDEDS/Golden+Paths

https://teams.sicredi.io/secure/Dashboard.jspa


teste alterando
teste alterando
teste alterando
teste alterando
teste alterando
teste alterando

import br.com.sicredi.pix.core.repository.RecorrenciaInstrucaoPagamentoCancelamentoRepository;
import br.com.sicredi.pix.core.service.impl.ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImpl;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Slice;

import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.IntStream;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImplTest {

    private RecorrenciaInstrucaoPagamentoCancelamentoRepository repository;
    private ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImpl service;

    @BeforeEach
    void setUp() {
        repository = mock(RecorrenciaInstrucaoPagamentoCancelamentoRepository.class);

        // Simula uma instância do service que tenha acesso ao método privado/protegido
        service = spy(new ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImpl(null));
        doReturn(repository).when(service).getRecorrenciaInstrucaoPagamentoCancelamentoRepository(); // adapte conforme necessário
    }

    @Test
    void deveProcessarPaginasComConteudo() {
        // Arrange
        var dataLimite = LocalDateTime.now().minusHours(12);
        var conteudoPagina1 = List.of("abc123", "def456");
        var conteudoPagina2 = List.of("ghi789");

        Slice<String> slice1 = mock(Slice.class);
        when(slice1.getContent()).thenReturn(conteudoPagina1);
        when(slice1.hasContent()).thenReturn(true);

        Slice<String> slice2 = mock(Slice.class);
        when(slice2.getContent()).thenReturn(conteudoPagina2);
        when(slice2.hasContent()).thenReturn(true);

        Slice<String> sliceVazio = mock(Slice.class);
        when(sliceVazio.hasContent()).thenReturn(false);

        // Simula retorno paginado
        when(repository.getListaCodFimAFimByListStatusAndTipoPSPSolicitanteCancelamento(
                any(), any(), any(), any()))
            .thenReturn(slice1)  // página 0
            .thenReturn(slice2)  // página 1
            .thenReturn(sliceVazio); // página 2

        // Mock do método que processa os dados
        doNothing().when(service).atualizarStatusCancelamento(anyList());

        // Act
        service.atualizarConfirmacaoCancelamentoPixAutomaticoJobService();

        // Assert: verifica que o método foi chamado para cada página com conteúdo
        ArgumentCaptor<List<String>> captor = ArgumentCaptor.forClass(List.class);
        verify(service, times(2)).atualizarStatusCancelamento(captor.capture());

        List<List<String>> chamadas = captor.getAllValues();
        assertEquals(2, chamadas.size());
        assertEquals(conteudoPagina1, chamadas.get(0));
        assertEquals(conteudoPagina2, chamadas.get(1));
    }
}



-----------------------------------------------------------------

> Task :bootBuildInfo
> Task :processResources UP-TO-DATE
> Task :processTestResources UP-TO-DATE
> Task :generateEffectiveLombokConfig
> Task :compileJava
> Task :classes
> Task :generateTestEffectiveLombokConfig
> Task :compileTestJava
Note: C:\Users\soares_diogo\DESENVOLVIMENTO\PROJETOS\spirecorrencia-api\src\test\java\io\sicredi\spirecorrencia\api\protocolo\SpiCanaisProtocoloApiConfigTest.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
> Task :testClasses
May 27, 2025 10:49:45 AM org.junit.platform.launcher.core.LauncherConfigurationParameters loadClasspathResource
WARNING: Discovered 2 'junit-platform.properties' configuration files in the classpath; only the first will be used.
May 27, 2025 10:49:45 AM org.junit.platform.launcher.core.LauncherConfigurationParameters loadClasspathResource
WARNING: Discovered 2 'junit-platform.properties' configuration files in the classpath; only the first will be used.
WARNING: A Java agent has been loaded dynamically (C:\Users\soares_diogo\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.14.18\417558ea01fe9f0e8a94af28b9469d281c4e3984\byte-buddy-agent-1.14.18.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release

class org.springframework.data.domain.Slice$MockitoMock$YhPBS4r9 cannot be cast to class org.springframework.data.domain.Page (org.springframework.data.domain.Slice$MockitoMock$YhPBS4r9 and org.springframework.data.domain.Page are in unnamed module of loader 'app')
java.lang.ClassCastException: class org.springframework.data.domain.Slice$MockitoMock$YhPBS4r9 cannot be cast to class org.springframework.data.domain.Page (org.springframework.data.domain.Slice$MockitoMock$YhPBS4r9 and org.springframework.data.domain.Page are in unnamed module of loader 'app')
	at io.sicredi.spirecorrencia.api.automatico.instrucaopagamentocancelamento.ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImplTest.deveProcessarPaginasComConteudo(ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImplTest.java:79)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


Java HotSpot(TM) 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended

> Task :test
ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImplTest > deveProcessarPaginasComConteudo() FAILED
    java.lang.ClassCastException: class org.springframework.data.domain.Slice$MockitoMock$YhPBS4r9 cannot be cast to class org.springframework.data.domain.Page (org.springframework.data.domain.Slice$MockitoMock$YhPBS4r9 and org.springframework.data.domain.Page are in unnamed module of loader 'app')
        at io.sicredi.spirecorrencia.api.automatico.instrucaopagamentocancelamento.ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImplTest.deveProcessarPaginasComConteudo(ConfirmacaoCancelamentoAposExpiracaoPixAutomaticoServiceImplTest.java:79)
1 test completed, 1 failed
> Task :test FAILED
> Task :jacocoTestReport
FAILURE: Build failed with an exception.
* What went wrong:
Execution failed for task ':test'.
> There were failing tests. See the report at: file:///C:/Users/soares_diogo/DESENVOLVIMENTO/PROJETOS/spirecorrencia-api/build/reports/tests/test/index.html
* Try:
> Run with --scan to get full insights.
BUILD FAILED in 44s
9 actionable tasks: 7 executed, 2 up-to-date
----------------------------------


import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;

...

@Test
void deveProcessarPaginasComConteudo() {
    // Arrange
    List<String> conteudoPagina1 = List.of("abc123", "def456");
    List<String> conteudoPagina2 = List.of("ghi789");

    Page<String> pagina1 = new PageImpl<>(conteudoPagina1, PageRequest.of(0, 10), 20);
    Page<String> pagina2 = new PageImpl<>(conteudoPagina2, PageRequest.of(1, 10), 20);
    Page<String> paginaVazia = new PageImpl<>(List.of(), PageRequest.of(2, 10), 20);

    when(repository.getListaCodFimAFimByListStatusAndTipoPSPSolicitanteCancelamento(
            any(), any(), any(), any()))
        .thenReturn(pagina1)
        .thenReturn(pagina2)
        .thenReturn(paginaVazia);

    doNothing().when(service).atualizarStatusCancelamento(anyList());

    // Act
    service.atualizarConfirmacaoCancelamentoPixAutomaticoJobService();

    // Assert
    verify(service, times(2)).atualizarStatusCancelamento(anyList());
}

