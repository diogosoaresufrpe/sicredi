CREATE SCHEMA IF NOT EXISTS SPI_OWNER;

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_PAGADOR
(
    OID_RECORRENCIA_PAGADOR NUMBER(19) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    NUM_CPF_CNPJ                       VARCHAR2(14)       NOT NULL,
    NOME                                        VARCHAR2(140 CHAR) NOT NULL,
    NUM_AGENCIA                        VARCHAR2(4)        NOT NULL,
    NUM_CONTA                           VARCHAR2(20)       NOT NULL,
    NUM_INSTITUICAO                 VARCHAR2(8)        NOT NULL,
    COD_POSTO                             VARCHAR2(4)        NOT NULL,
    TPO_CONTA                            VARCHAR2(25)       NOT NULL,
    TPO_PESSOA                            VARCHAR2(2)        NOT NULL,
    ID_USUARIO_PROTOCOLO    VARCHAR2(32),
    DAT_CRIACAO_REGISTRO    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECPAG ON SPI_OWNER.RECORRENCIA_PAGADOR (OID_RECORRENCIA_PAGADOR);
CREATE INDEX IF NOT EXISTS IN_RECPAG_CONTAGE ON SPI_OWNER.RECORRENCIA_PAGADOR (NUM_CONTA, NUM_AGENCIA);
CREATE INDEX IF NOT EXISTS IN_RECPAG_DOC ON SPI_OWNER.RECORRENCIA_PAGADOR (NUM_CPF_CNPJ);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_PAGADOR
    ADD CONSTRAINT IF NOT EXISTS PK_RECPAG
        PRIMARY KEY (OID_RECORRENCIA_PAGADOR);

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_PAGADOR
    ADD CONSTRAINT IF NOT EXISTS CK_RECPAG_TPO_CONTA
        CHECK (TPO_CONTA IN ('CONTA_CORRENTE', 'CONTA_POUPANCA', 'CONTA_SALARIO', 'CONTA_PAGAMENTO'));

ALTER TABLE SPI_OWNER.RECORRENCIA_PAGADOR
    ADD CONSTRAINT IF NOT EXISTS CK_RECPAG_TPO_PESSOA
        CHECK (TPO_PESSOA IN ('PF', 'PJ'));

-- CONSTRAINTS(UNIQUE)
ALTER TABLE SPI_OWNER.RECORRENCIA_PAGADOR
    ADD CONSTRAINT IF NOT EXISTS UK_RECPAG_DOCAGEUACONTCTP UNIQUE (NUM_CPF_CNPJ, NUM_AGENCIA, NUM_CONTA, TPO_CONTA, TPO_PESSOA);

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_RECEBEDOR (
    OID_RECORRENCIA_RECEBEDOR NUMBER(19) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    NUM_CPF_CNPJ              VARCHAR2(14)       NOT NULL,
    NOME                      VARCHAR2(140 CHAR) NOT NULL,
    NUM_AGENCIA               VARCHAR2(4),
    NUM_CONTA                 VARCHAR2(20)       NOT NULL,
    NUM_INSTITUICAO           VARCHAR2(8)        NOT NULL,
    TPO_CONTA                 VARCHAR2(25)       NOT NULL,
    TPO_PESSOA                VARCHAR2(2)        NOT NULL,
    TPO_CHAVE                 VARCHAR2(8),
    CHAVE                     VARCHAR2(77 CHAR),
    DAT_CRIACAO_REGISTRO      TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO    TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP
);

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECRECE ON SPI_OWNER.RECORRENCIA_RECEBEDOR (OID_RECORRENCIA_RECEBEDOR);
CREATE INDEX IF NOT EXISTS IN_RECRECE_CHAVE ON SPI_OWNER.RECORRENCIA_RECEBEDOR (CHAVE);
CREATE INDEX IF NOT EXISTS IN_RECRECE_CONTAGE ON SPI_OWNER.RECORRENCIA_RECEBEDOR (NUM_CONTA, NUM_AGENCIA);
CREATE INDEX IF NOT EXISTS IN_RECRECE_DOC ON SPI_OWNER.RECORRENCIA_RECEBEDOR (NUM_CPF_CNPJ);
CREATE INDEX IF NOT EXISTS IN_RECRECE_CONTAGEINST ON SPI_OWNER.RECORRENCIA_RECEBEDOR (NUM_CONTA, NUM_AGENCIA, NUM_INSTITUICAO);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_RECEBEDOR
    ADD CONSTRAINT IF NOT EXISTS PK_RECRECE PRIMARY KEY (OID_RECORRENCIA_RECEBEDOR);

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_RECEBEDOR
    ADD CONSTRAINT IF NOT EXISTS CK_RECRECE_TPO_CHAVE
        CHECK (TPO_CHAVE IN ('CPF', 'CNPJ', 'TELEFONE', 'EMAIL', 'EVP'));

ALTER TABLE SPI_OWNER.RECORRENCIA_RECEBEDOR
    ADD CONSTRAINT IF NOT EXISTS CK_RECRECE_TPO_PESSOA
        CHECK (TPO_PESSOA IN ('PF', 'PJ'));

ALTER TABLE SPI_OWNER.RECORRENCIA_RECEBEDOR
    ADD CONSTRAINT IF NOT EXISTS CK_RECRECE_TPO_CONTA
        CHECK (TPO_CONTA IN ('CONTA_CORRENTE', 'CONTA_POUPANCA', 'CONTA_SALARIO', 'CONTA_PAGAMENTO'));

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA (
    OID_RECORRENCIA           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    OID_RECORRENCIA_PAGADOR   NUMBER(19)                    NOT NULL,
    OID_RECORRENCIA_RECEBEDOR NUMBER(19)                    NOT NULL,
    ID_RECORRENCIA            VARCHAR2(36)                  NOT NULL,
    TPO_RECORRENCIA           VARCHAR2(21)                  NOT NULL,
    NOME                      VARCHAR2(30 CHAR)             NOT NULL,
    TPO_CANAL                 VARCHAR2(25)                  NOT NULL,
    TPO_ORIGEM_SISTEMA                 VARCHAR2(6)                  NOT NULL,
    TPO_INICIACAO             VARCHAR2(30)                  NOT NULL,
    TPO_STATUS                VARCHAR2(25)                  NOT NULL,
    TPO_INICIACAO_CANAL       VARCHAR2(16) DEFAULT 'CHAVE'  NOT NULL,
    TPO_FREQUENCIA            VARCHAR2(13),
    NUM_INIC_CNPJ             VARCHAR2(14),
    DAT_CRIACAO               TIMESTAMP                     NOT NULL,
    DAT_EXCLUSAO              TIMESTAMP,
    DAT_CRIACAO_REGISTRO      TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO    TIMESTAMP    DEFAULT CURRENT_TIMESTAMP
);

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECORRENCIA_OID ON SPI_OWNER.RECORRENCIA (OID_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_FK_RECORRENCIA_OIDPAG ON SPI_OWNER.RECORRENCIA (OID_RECORRENCIA_PAGADOR);
CREATE INDEX IF NOT EXISTS IN_FK_RECORRENCIA_OIDRECE ON SPI_OWNER.RECORRENCIA (OID_RECORRENCIA_RECEBEDOR);
CREATE INDEX IF NOT EXISTS IN_RECORRENCIA_IDREC ON SPI_OWNER.RECORRENCIA (ID_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_RECORRENCIA_DATCRITPOREC ON SPI_OWNER.RECORRENCIA (DAT_CRIACAO, TPO_STATUS, TPO_RECORRENCIA);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS PK_RECORRENCIA PRIMARY KEY (OID_RECORRENCIA);

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS CK_RECORRENCIA_TPOCANAL
        CHECK (TPO_CANAL IN ('SICREDI_INTERNET', 'MOBI', 'WEB_OPENBK', 'SICREDI_X', 'WOOP'));

ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD  CONSTRAINT IF NOT EXISTS CK_RECORRENCIA_TPOORIGEMSISTEMA
        CHECK (TPO_ORIGEM_SISTEMA IN ('LEGADO', 'FISITAL'));

ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS CK_RECORRENCIA_INICIACAO
        CHECK (TPO_INICIACAO IN ('PIX_PAYMENT_BY_KEY', 'PIX_PAYMENT_MANUAL', 'PIX_PAYMENT_BY_STATIC_QR_CODE',
                                 'PIX_PAYMENT_BY_DYNAMIC_QR_CODE', 'PIX_INIC'));

ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS CK_RECORRENCIA_TPOSTATUS
        CHECK (TPO_STATUS IN ('CRIADO', 'PENDENTE', 'CONCLUIDO', 'EXCLUIDO'));

ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS CK_RECORRENCIA_TPOREC
        CHECK (TPO_RECORRENCIA IN ('AGENDADO', 'AGENDADO_RECORRENTE', 'AUTOMATICO_RECORRENTE'));

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS CK_RECORRENCIA_TPO_INICIACAO_CANAL
        CHECK (TPO_INICIACAO_CANAL IN ('FAVORITOS', 'RECENTES', 'CHAVE', 'OPEN_FINANCE','DADOS_BANCARIOS'));

ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS CK_RECORRENCIA_TPO_FREQUENCIA
        CHECK (TPO_FREQUENCIA IN ('SEMANAL', 'QUINZENAL', 'MENSAL', 'DIARIA', 'PERSONALIZADA'));

-- CONSTRAINTS(FOREIGN KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS FK_RECORRENCIA_PAGADOR_OID FOREIGN KEY (OID_RECORRENCIA_PAGADOR)
    REFERENCES SPI_OWNER.RECORRENCIA_PAGADOR (OID_RECORRENCIA_PAGADOR);

ALTER TABLE SPI_OWNER.RECORRENCIA
    ADD CONSTRAINT IF NOT EXISTS FK_RECORRENCIA_RECEBEDOR_OID FOREIGN KEY (OID_RECORRENCIA_RECEBEDOR)
    REFERENCES SPI_OWNER.RECORRENCIA_RECEBEDOR (OID_RECORRENCIA_RECEBEDOR);

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_TRANSACAO (
    OID_RECORRENCIA_TRANSACAO           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    OID_RECORRENCIA                     NUMBER(19)              NOT NULL,
    ID_PARCELA                          VARCHAR2(36)            NOT NULL,
    TPO_STATUS                          VARCHAR2(25)            NOT NULL,
    COD_FIM_A_FIM                       VARCHAR2(32),
    NUM_VALOR                           NUMBER(18, 2)           NOT NULL,
    FLG_NOTIFICACAO_DIA_ANTERIOR        VARCHAR2(1) DEFAULT 'N' NOT NULL,
    TPO_MOTIVO_EXCLUSAO                 VARCHAR2(25),
    INFORMACOES_ENTRE_USUARIOS          VARCHAR2(140),
    ID_CONCILIACAO_RECEBEDOR            VARCHAR2(35),
    DAT_TRANSACAO                       TIMESTAMP               NOT NULL,
    DAT_EXCLUSAO                        TIMESTAMP,
    DAT_CRIACAO_REGISTRO                TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO              TIMESTAMP   DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE SPI_OWNER.RECORRENCIA_TRANSACAO
    ADD CONSTRAINT IF NOT EXISTS CK_RECTRANS_MOTEXCLUSAO
        CHECK (TPO_MOTIVO_EXCLUSAO IN ('SOLICITADO_USUARIO', 'SOLICITADO_SISTEMA', 'EXCESSO_TENTATIVAS', 'SOLICITADO_INICIADORA'));

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECTRANS ON SPI_OWNER.RECORRENCIA_TRANSACAO (OID_RECORRENCIA_TRANSACAO);
CREATE INDEX IF NOT EXISTS IN_FK_RECTRANS_RECORRENCIA_OID ON SPI_OWNER.RECORRENCIA_TRANSACAO (OID_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_FK_RECTRANS_IDPARC ON SPI_OWNER.RECORRENCIA_TRANSACAO (ID_PARCELA);
CREATE INDEX IF NOT EXISTS IN_FK_RECTRANS_IDCONC ON SPI_OWNER.RECORRENCIA_TRANSACAO (ID_CONCILIACAO_RECEBEDOR);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_TRANSACAO
    ADD CONSTRAINT IF NOT EXISTS PK_RECTRANS PRIMARY KEY (OID_RECORRENCIA_TRANSACAO);

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_TRANSACAO
    ADD CONSTRAINT IF NOT EXISTS CK_RECTRANS_STATUS
        CHECK (TPO_STATUS IN ('CRIADO', 'PENDENTE', 'CONCLUIDO', 'EXCLUIDO'));

-- CONSTRAINTS(FOREIGN KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_TRANSACAO
    ADD CONSTRAINT IF NOT EXISTS FK_RECTRANS_RECORRENCIA
    FOREIGN KEY (OID_RECORRENCIA) REFERENCES SPI_OWNER.RECORRENCIA (OID_RECORRENCIA);

-- CONSTRAINTS(UNIQUE)
ALTER TABLE SPI_OWNER.RECORRENCIA_TRANSACAO
    ADD CONSTRAINT IF NOT EXISTS UK_PK_RECTRANS_IDPARCELA
    UNIQUE (ID_PARCELA);

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_TRANSACAO_TENT (
    OID_RECORRENCIA_TRANSACAO_TENT NUMBER(19) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    OID_RECORRENCIA_TRANSACAO      NUMBER(19)        NOT NULL,
    MOTIVO                         VARCHAR2(255)     NOT NULL,
    CODIGO                         VARCHAR2(30 CHAR) NOT NULL,
    COD_FIM_A_FIM                  VARCHAR2(32)      NOT NULL,
    DAT_CRIACAO_REGISTRO           TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECTRANTENT_ID ON SPI_OWNER.RECORRENCIA_TRANSACAO_TENT (OID_RECORRENCIA_TRANSACAO_TENT);
CREATE INDEX IF NOT EXISTS IN_FK_RECTRANTENT_RECTRAN ON SPI_OWNER.RECORRENCIA_TRANSACAO_TENT (OID_RECORRENCIA_TRANSACAO);
CREATE INDEX IF NOT EXISTS IN_PK_RECTRANTENT_CODFIMAFIM ON SPI_OWNER.RECORRENCIA_TRANSACAO_TENT (COD_FIM_A_FIM);
CREATE INDEX IF NOT EXISTS IN_PK_RECTRANTENT_CODMOT ON SPI_OWNER.RECORRENCIA_TRANSACAO_TENT (CODIGO, MOTIVO);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_TRANSACAO_TENT
    ADD CONSTRAINT IF NOT EXISTS PK_RECTRANTENT PRIMARY KEY (OID_RECORRENCIA_TRANSACAO_TENT);

-- CONSTRAINTS(FOREIGN KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_TRANSACAO_TENT
    ADD CONSTRAINT IF NOT EXISTS FK_RECTRANTENT_RECTRAN FOREIGN KEY (OID_RECORRENCIA_TRANSACAO)
    REFERENCES SPI_OWNER.RECORRENCIA_TRANSACAO (OID_RECORRENCIA_TRANSACAO);

CREATE TABLE IF NOT EXISTS SPI_OWNER.IDEMPOTENT_TRANSACTION_OUTBOX_RECORRENCIA (
    TRANSACTION_ID VARCHAR(50) NOT NULL,
    ID VARCHAR(255) NOT NULL,
    BODY CLOB,
    CLASS_NAME VARCHAR(255),
    IS_ERROR SMALLINT,
    CREATED_AT TIMESTAMP NOT NULL,
    TYPE VARCHAR(255),
    HEADERS CLOB,
    TOPIC_NAME VARCHAR(255) NOT NULL,
    SORT_KEY VARCHAR(255),
    IS_CDC SMALLINT,
    PRIMARY KEY (TRANSACTION_ID, ID)
    );

CREATE INDEX IF NOT EXISTS IN_PK_IDEM_OUT_RECORRENCIA_TRANS_ID
    ON SPI_OWNER.IDEMPOTENT_TRANSACTION_OUTBOX_RECORRENCIA (TRANSACTION_ID, ID);

CREATE INDEX IF NOT EXISTS IN_IDEM_OUT_RECORRENCIA_CREATED_AT
    ON SPI_OWNER.IDEMPOTENT_TRANSACTION_OUTBOX_RECORRENCIA (CREATED_AT);

CREATE TABLE IF NOT EXISTS SPI_OWNER.IDEMPOTENT_TRANSACTION_RECORRENCIA (
    ID VARCHAR(50) NOT NULL,
    CHECKSUM NUMERIC NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    PRIMARY KEY (ID)
    );

CREATE INDEX IF NOT EXISTS IN_PK_IDEMPOTENT_RECORRENCIA_ID
    ON SPI_OWNER.IDEMPOTENT_TRANSACTION_RECORRENCIA (ID);

CREATE INDEX IF NOT EXISTS IN_IDEMPOTENT_RECORRENCIA_CREATED_AT
    ON SPI_OWNER.IDEMPOTENT_TRANSACTION_RECORRENCIA (CREATED_AT);

CREATE TABLE IF NOT EXISTS SPI_OWNER.SHEDLOCK (
        name VARCHAR(64) NOT NULL,
        lock_until TIMESTAMP NOT NULL,
        locked_at TIMESTAMP NOT NULL,
        locked_by VARCHAR(255) NOT NULL,
        PRIMARY KEY (name)
);

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_AUTORIZACAO
(
    OID_RECORRENCIA_AUTORIZACAO         NUMBER(19) GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
    ID_RECORRENCIA                      VARCHAR2(29)            NOT NULL,
    ID_INFORMACAO_STATUS_ENVIO          VARCHAR2(29)            NOT NULL,
    ID_INFORMACAO_STATUS_RECEBIMENTO    VARCHAR2(29)            NULL,
    TPO_JORNADA                         VARCHAR2(9)             NOT NULL,
    TPO_STATUS                          VARCHAR2(25)            NOT NULL,
    TPO_SUB_STATUS                      VARCHAR2(25)            NULL,
    TPO_FREQUENCIA                      VARCHAR2(13)            NOT NULL,
    NUM_VALOR                           NUMBER(18, 2)           NULL,
    NUM_PISO_VALOR_MAXIMO               NUMBER(18, 2)           NULL,
    NUM_VALOR_MAXIMO                    NUMBER(18, 2)           NULL,
    FLG_PERMITE_LINHA_CREDITO           VARCHAR2(1) DEFAULT 'S' NOT NULL,
    FLG_PERMITE_NOTIFICACAO_AGENDAMENTO VARCHAR2(1) DEFAULT 'S' NOT NULL,
    FLG_PERMITE_RETENTATIVA             VARCHAR2(1)             NOT NULL,
    NUM_CPF_CNPJ_PAGADOR                VARCHAR2(14)            NOT NULL,
    TXT_NOME_PAGADOR                    VARCHAR2(140)           NOT NULL,
    NUM_AGENCIA_PAGADOR                 VARCHAR2(4)             NOT NULL,
    NUM_CONTA_PAGADOR                   VARCHAR2(20)            NOT NULL,
    NUM_INSTITUICAO_PAGADOR             VARCHAR2(8)             NOT NULL,
    COD_POSTO_PAGADOR                   VARCHAR2(4)             NOT NULL,
    TPO_CONTA_PAGADOR                   VARCHAR2(25)            NOT NULL,
    TPO_PESSOA_PAGADOR                  VARCHAR2(2)             NOT NULL,
    TPO_SISTEMA_PAGADOR                 VARCHAR2(8)             NOT NULL,
    TPO_CANAL_PAGADOR                   VARCHAR2(25)            NOT NULL,
    TXT_NOME_RECEBEDOR                  VARCHAR2(140)           NOT NULL,
    NUM_CPF_CNPJ_RECEBEDOR              VARCHAR2(14)            NOT NULL,
    NUM_INSTITUICAO_RECEBEDOR           VARCHAR2(8)             NOT NULL,
    TXT_NOME_DEVEDOR                    VARCHAR2(140)           NULL,
    NUM_CPF_CNPJ_DEVEDOR                VARCHAR2(14)            NULL,
    NUM_CONTRATO                        VARCHAR2(35)            NOT NULL,
    TXT_DESCRICAO                       VARCHAR2(35)            NULL,
    COD_MOTIVO_REJEICAO                 VARCHAR2(255)           NULL,
    COD_MUN_IBGE                        VARCHAR2(14)            NOT NULL,
    DAT_INICIAL_RECORRENCIA             DATE                    NOT NULL,
    DAT_FINAL_RECORRENCIA               DATE                    NULL,
    DAT_CRIACAO_RECORRENCIA             TIMESTAMP               NOT NULL,
    DAT_INICIO_CONFIRMACAO              TIMESTAMP               NOT NULL,
    DAT_CRIACAO_REGISTRO                TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO              TIMESTAMP   DEFAULT CURRENT_TIMESTAMP
);

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECAUT_OID ON SPI_OWNER.RECORRENCIA_AUTORIZACAO (OID_RECORRENCIA_AUTORIZACAO);
CREATE INDEX IF NOT EXISTS IN_RECAUT_IDREC ON SPI_OWNER.RECORRENCIA_AUTORIZACAO (ID_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_RECAUT_IDINFSTSENVIO ON SPI_OWNER.RECORRENCIA_AUTORIZACAO (ID_INFORMACAO_STATUS_ENVIO);
CREATE INDEX IF NOT EXISTS IN_RECAUT_IDINFSTSRECEB ON SPI_OWNER.RECORRENCIA_AUTORIZACAO (ID_INFORMACAO_STATUS_RECEBIMENTO);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO
    ADD CONSTRAINT  IF NOT EXISTS PK_RECAUT PRIMARY KEY (OID_RECORRENCIA_AUTORIZACAO);

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO
    ADD CONSTRAINT  IF NOT EXISTS CK_RECAUT_TPOSTATUS
        CHECK (TPO_STATUS IN ('CRIADA', 'APROVADA', 'REJEITADA', 'CANCELADA', 'EXPIRADA'));

ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO
    ADD CONSTRAINT  IF NOT EXISTS CK_RECAUT_TPOJORNADA
        CHECK (TPO_JORNADA IN ('JORNADA_1', 'JORNADA_2', 'JORNADA_3', 'JORNADA_4'));

ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO
    ADD CONSTRAINT  IF NOT EXISTS CK_RECAUT_TPOSISPAG
        CHECK (TPO_SISTEMA_PAGADOR IN ('LEGADO', 'FISITAL'));

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO
    ADD CONSTRAINT  IF NOT EXISTS CK_RECAUT_TPOCANAL
        CHECK (TPO_CANAL_PAGADOR IN ('SICREDI_INTERNET', 'MOBI', 'WEB_OPENBK', 'SICREDI_X', 'WOOP'));


CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_AUTORIZACAO_SOLICITACAO
(
    ID_SOLICITACAO_RECORRENCIA            VARCHAR2(29)  NOT NULL,
    ID_RECORRENCIA                        VARCHAR2(29)  NOT NULL,
    ID_INFORMACAO_STATUS                  VARCHAR2(29)  NOT NULL,
    TPO_STATUS                            VARCHAR2(25)  NOT NULL,
    TPO_SUB_STATUS                        VARCHAR2(25)  NULL,
    TPO_FREQUENCIA                        VARCHAR2(13)  NOT NULL,
    NUM_VALOR                             NUMBER(18, 2) NULL,
    NUM_PISO_VALOR_MAXIMO                 NUMBER(18, 2) NULL,
    NUM_CPF_CNPJ_PAGADOR                  VARCHAR2(14)  NOT NULL,
    TXT_NOME_PAGADOR                      VARCHAR2(140),
    NUM_AGENCIA_PAGADOR                   VARCHAR2(4),
    NUM_CONTA_PAGADOR                     VARCHAR2(20)  NOT NULL,
    NUM_INSTITUICAO_PAGADOR               VARCHAR2(8)   NOT NULL,
    COD_POSTO_PAGADOR                     VARCHAR2(4),
    TPO_CONTA_PAGADOR                     VARCHAR2(25),
    TPO_PESSOA_PAGADOR                    VARCHAR2(2)   NOT NULL,
    TPO_SISTEMA_PAGADOR                   VARCHAR2(8),
    TXT_NOME_RECEBEDOR                    VARCHAR2(140) NOT NULL,
    NUM_CPF_CNPJ_RECEBEDOR                VARCHAR2(14)  NOT NULL,
    NUM_INSTITUICAO_RECEBEDOR             VARCHAR2(8)   NOT NULL,
    TXT_NOME_DEVEDOR                      VARCHAR2(140) NULL,
    NUM_CPF_CNPJ_DEVEDOR                  VARCHAR2(14)  NULL,
    NUM_CONTRATO                          VARCHAR2(35)  NOT NULL,
    TXT_DESCRICAO                         VARCHAR2(35)  NULL,
    COD_MOTIVO_REJEICAO                   VARCHAR2(255) NULL,
    COD_MUN_IBGE                          VARCHAR2(14)  NULL,
    DAT_INICIAL_RECORRENCIA               DATE          NOT NULL,
    DAT_FINAL_RECORRENCIA                 DATE          NULL,
    DAT_CRIACAO_RECORRENCIA               TIMESTAMP     NOT NULL,
    DAT_EXPIRACAO_CONFIRMACAO_SOLICITACAO TIMESTAMP     NOT NULL,
    DAT_INICIO_CONFIRMACAO                TIMESTAMP     NULL,
    DAT_CRIACAO_REGISTRO                  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO                TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECAUTSOC_ID ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_SOLICITACAO (ID_SOLICITACAO_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_RECAUTSOC_IDREC ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_SOLICITACAO (ID_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_RECAUTSOC_IDINFSTS ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_SOLICITACAO (ID_INFORMACAO_STATUS);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_SOLICITACAO
    ADD CONSTRAINT IF NOT EXISTS PK_RECAUTSOC PRIMARY KEY (ID_SOLICITACAO_RECORRENCIA);

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_SOLICITACAO
    ADD CONSTRAINT IF NOT EXISTS CK_RECAUTSOC_TPOSTATUS
        CHECK (TPO_STATUS IN ('CRIADA', 'PENDENTE_CONFIRMACAO', 'CONFIRMADA', 'ACEITA', 'REJEITADA', 'CANCELADA', 'EXPIRADA'));

ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_SOLICITACAO
    ADD CONSTRAINT IF NOT EXISTS CK_RECAUTSOC_TPOSISPAG
        CHECK (TPO_SISTEMA_PAGADOR IN ('LEGADO', 'FISITAL'));

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_AUTORIZACAO_PAGAMENTO_IMEDIATO
(
    COD_FIM_A_FIM               VARCHAR2(32) NOT NULL,
    ID_RECORRENCIA              VARCHAR2(29) NOT NULL,
    DAT_RECEBIMENTO_CONFIRMACAO TIMESTAMP    NOT NULL,
    DAT_CRIACAO_REGISTRO        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO      TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECAUTPAGIMED_ID ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_PAGAMENTO_IMEDIATO (COD_FIM_A_FIM);
CREATE INDEX IF NOT EXISTS IN_RECAUTPAGIMED_IDREC ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_PAGAMENTO_IMEDIATO (ID_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_RECAUTPAGIMED_DATRECBCONF ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_PAGAMENTO_IMEDIATO (DAT_RECEBIMENTO_CONFIRMACAO);
CREATE INDEX IF NOT EXISTS IN_RECAUTPAGIMED_DATCRI ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_PAGAMENTO_IMEDIATO (DAT_CRIACAO_REGISTRO);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_PAGAMENTO_IMEDIATO
    ADD CONSTRAINT IF NOT EXISTS PK_RECAUTPAGIMED PRIMARY KEY (COD_FIM_A_FIM);

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO
(
    ID_INFORMACAO_CANCELAMENTO            VARCHAR2(29)  NOT NULL,
    ID_RECORRENCIA                        VARCHAR2(29)  NOT NULL,
    ID_INFORMACAO_STATUS                  VARCHAR2(29)  NULL,
    TPO_CANCELAMENTO                      VARCHAR2(23)  NOT NULL,
    TPO_PSP_SOLICITANTE_CANCELAMENTO      VARCHAR2(9)   NOT NULL,
    TPO_STATUS                            VARCHAR2(9)   NOT NULL,
    NUM_CPF_CNPJ_SOLICITANTE_CANCELAMENTO VARCHAR2(14)  NOT NULL,
    COD_MOTIVO_CANCELAMENTO               VARCHAR2(255) NOT NULL,
    COD_MOTIVO_REJEICAO                   VARCHAR2(255) NULL,
    DAT_CANCELAMENTO                      TIMESTAMP     NOT NULL,
    DAT_CRIACAO_REGISTRO                  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO                TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_RECAUTCANC_ID ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO (ID_INFORMACAO_CANCELAMENTO);
CREATE INDEX IF NOT EXISTS IN_RECAUTCANC_IDREC ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO (ID_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_FK_OIDRECAUT ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO (ID_INFORMACAO_STATUS);
CREATE INDEX IF NOT EXISTS IN_RECAUTCANC_CPFCNPJSOL ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO (NUM_CPF_CNPJ_SOLICITANTE_CANCELAMENTO);
CREATE INDEX IF NOT EXISTS IN_RECAUTCANC_DATCAN ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO (DAT_CANCELAMENTO);
CREATE INDEX IF NOT EXISTS IN_RECAUTCANC_DATCRI ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO (DAT_CRIACAO_REGISTRO);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO
    ADD CONSTRAINT IF NOT EXISTS PK_RECAUTCANC PRIMARY KEY (ID_INFORMACAO_CANCELAMENTO);

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO
    ADD CONSTRAINT IF NOT EXISTS CK_RECAUTCANC_TPOCANCE
        CHECK (TPO_CANCELAMENTO IN ('RECORRENCIA_SOLICITACAO', 'RECORRENCIA_AUTORIZACAO'));

ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO
    ADD CONSTRAINT IF NOT EXISTS CK_RECAUTCANC_TPOPSP
        CHECK (TPO_PSP_SOLICITANTE_CANCELAMENTO IN ('PAGADOR', 'RECEBEDOR'));

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_CANCELAMENTO
    ADD CONSTRAINT IF NOT EXISTS CK_RECAUTCANC_TPOSTATUS
        CHECK (TPO_STATUS IN ('CRIADA', 'ENVIADA', 'ACEITA', 'REJEITADA'));

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_AUTORIZACAO_CICLO
(
    OID_RECORRENCIA_AUTORIZACAO_CICLO NUMBER(19) GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    OID_RECORRENCIA_AUTORIZACAO NUMBER(19) NOT NULL,
    TPO_STATUS VARCHAR(9) NOT NULL,
    DAT_INICIAL DATE NOT NULL,
    DAT_FINAL DATE NOT NULL,
    DAT_CRIACAO_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_CICLO
    ADD CONSTRAINT IF NOT EXISTS PK_RECAUTCICLO PRIMARY KEY (OID_RECORRENCIA_AUTORIZACAO_CICLO);

ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_CICLO
    ADD CONSTRAINT IF NOT EXISTS CK_RECAUTCICLO_TPOSTATUS CHECK (TPO_STATUS IN ('ABERTO', 'ENCERRADO'));

ALTER TABLE SPI_OWNER.RECORRENCIA_AUTORIZACAO_CICLO
    ADD CONSTRAINT IF NOT EXISTS UK_RECAUTCICLO_OIDRECAUTDATINIDATFIM UNIQUE (OID_RECORRENCIA_AUTORIZACAO, DAT_INICIAL, DAT_FINAL);

-- Índices adicionais
CREATE INDEX IF NOT EXISTS IN_FK_RECAUTCICLO_OIDRECAUT ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CICLO (OID_RECORRENCIA_AUTORIZACAO);
CREATE INDEX IF NOT EXISTS IN_RECAUTCICLO_DATINI ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CICLO (DAT_INICIAL);
CREATE INDEX IF NOT EXISTS IN_RECAUTCICLO_DATFIM ON SPI_OWNER.RECORRENCIA_AUTORIZACAO_CICLO (DAT_FINAL);

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO
(
    COD_FIM_A_FIM VARCHAR(32) NOT NULL,
    OID_RECORRENCIA_AUTORIZACAO BIGINT,
    OID_RECORRENCIA_AUTORIZACAO_CICLO BIGINT,
    ID_RECORRENCIA VARCHAR(29) NOT NULL,
    NUM_CPF_CNPJ_PAGADOR VARCHAR(14) NOT NULL,
    NUM_INSTITUICAO_PAGADOR VARCHAR(8) NOT NULL,
    TXT_NOME_DEVEDOR VARCHAR(140),
    NUM_CPF_CNPJ_DEVEDOR VARCHAR(14),
    NUM_VALOR DECIMAL(18,2) NOT NULL,
    NUM_CPF_CNPJ_RECEBEDOR VARCHAR(14) NOT NULL,
    NUM_AGENCIA_RECEBEDOR VARCHAR(4),
    NUM_CONTA_RECEBEDOR VARCHAR(20) NOT NULL,
    NUM_INSTITUICAO_RECEBEDOR VARCHAR(8) NOT NULL,
    TPO_CONTA_RECEBEDOR VARCHAR(25) NOT NULL,
    ID_CONCILIACAO_RECEBEDOR VARCHAR(35) NOT NULL,
    TPO_STATUS VARCHAR(25) NOT NULL,
    TPO_SUB_STATUS VARCHAR(25),
    TPO_FINALIDADE_AGENDAMENTO VARCHAR(25) NOT NULL,
    TXT_INFORMACOES_ENTRE_USUARIOS VARCHAR(140),
    COD_MOTIVO_REJEICAO VARCHAR(255),
    DAT_EMISSAO TIMESTAMP NOT NULL,
    DAT_VENCIMENTO DATE NOT NULL,
    DAT_CONFIRMACAO TIMESTAMP,
    DAT_CONCLUIDO TIMESTAMP,
    DAT_CRIACAO_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DAT_ALTERACAO_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO
    ADD CONSTRAINT IF NOT EXISTS PK_INSTPAG PRIMARY KEY (COD_FIM_A_FIM);

ALTER TABLE SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO
    ADD CONSTRAINT IF NOT EXISTS CK_INSTPAG_TPOSTATUS
    CHECK (TPO_STATUS IN ('CRIADA', 'ATIVA', 'CONCLUIDA', 'REJEITADA', 'CANCELADA'));

-- Índices adicionais
CREATE INDEX IF NOT EXISTS IN_FK_INSTPAG_OIDRECAUT ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (OID_RECORRENCIA_AUTORIZACAO);
CREATE INDEX IF NOT EXISTS IN_FK_INSTPAG_OIDRECAUTCICLO ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (OID_RECORRENCIA_AUTORIZACAO_CICLO);
CREATE INDEX IF NOT EXISTS IN_INSTPAG_DOCPAG ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (NUM_CPF_CNPJ_PAGADOR);
CREATE INDEX IF NOT EXISTS IN_INSTPAG_IDREC ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (ID_RECORRENCIA);
CREATE INDEX IF NOT EXISTS IN_INSTPAG_DOCRECB ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (NUM_CPF_CNPJ_RECEBEDOR);
CREATE INDEX IF NOT EXISTS IN_INSTPAG_DOCDEV ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (NUM_CPF_CNPJ_DEVEDOR);
CREATE INDEX IF NOT EXISTS IN_INSTPAG_DATVEN ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (DAT_VENCIMENTO);
CREATE INDEX IF NOT EXISTS IN_INSTPAG_DATCONF ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (DAT_CONFIRMACAO);
CREATE INDEX IF NOT EXISTS IN_INSTPAG_DATCRI ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (DAT_CRIACAO_REGISTRO);
CREATE INDEX IF NOT EXISTS IN_INSTPAG_DATEMI ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO (DAT_EMISSAO);

CREATE TABLE IF NOT EXISTS SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO
(
   	ID_CANCELAMENTO_AGENDAMENTO              VARCHAR2(32)  NOT NULL,
	COD_FIM_A_FIM                            VARCHAR2(36)  NOT NULL,
	TPO_PSP_SOLICITANTE_CANCELAMENTO         VARCHAR2(30)  NOT NULL,
	TPO_STATUS                               VARCHAR2(9)   NOT NULL,
	NUM_CPF_CNPJ_SOLICITANTE_CANCELAMENTO    VARCHAR2(14)  NOT NULL,
	COD_MOTIVO_CANCELAMENTO                  VARCHAR2(255) NOT NULL,
	COD_MOTIVO_REJEICAO                      VARCHAR2(255) NULL,
	DAT_CRIACAO_SOLICITACAO_CANCELAMENTO     TIMESTAMP (6) NOT NULL,
	DAT_ANALISADO_SOLICITACAO_CANCELAMENTO   TIMESTAMP (6) NULL,
	DAT_CRIACAO_REGISTRO                     TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
	DAT_ALTERACAO_REGISTRO                   TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
);

-- CONSTRAINTS(PRIMARY KEY)
ALTER TABLE SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO
    ADD CONSTRAINT IF NOT EXISTS PK_INSTPAGCANC PRIMARY KEY (ID_CANCELAMENTO_AGENDAMENTO);

-- INDEX
CREATE INDEX IF NOT EXISTS IN_PK_INSTPAGCANC_ID ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO (ID_CANCELAMENTO_AGENDAMENTO);
CREATE INDEX IF NOT EXISTS IN_FK_INSTPAGCANC_CODFIMAFIM ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO (COD_FIM_A_FIM);
CREATE INDEX IF NOT EXISTS IN_FK_INSTPAGCANC_DATSOLI ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO (DAT_CRIACAO_SOLICITACAO_CANCELAMENTO);
CREATE INDEX IF NOT EXISTS IN_FK_INSTPAGCANC_DATANA ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO (DAT_ANALISADO_SOLICITACAO_CANCELAMENTO);
CREATE INDEX IF NOT EXISTS IN_FK_INSTPAGCANC_DATCRI ON SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO (DAT_CRIACAO_REGISTRO);

-- CONSTRAINTS(ENUMS)
ALTER TABLE SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO
    ADD CONSTRAINT IF NOT EXISTS CK_INSTPAGCANC_TPOPSP
        CHECK (TPO_PSP_SOLICITANTE_CANCELAMENTO IN ('PAGADOR', 'RECEBEDOR'));

ALTER TABLE SPI_OWNER.RECORRENCIA_INSTRUCAO_PAGAMENTO_CANCELAMENTO
    ADD CONSTRAINT IF NOT EXISTS CK_INSTPAGCANC_TPOSTATUS
        CHECK (TPO_STATUS IN ('CRIADA', 'ENVIADA', 'ACEITA', 'REJEITADA'));